Git and GitHub
---------------
What is Git?
	-> Git is a free and open source version control system designed to handle everything from small to very large projects with speed and efficiency.
	-> Version control - is the practice of tracking and managing changes to software code.
	
Git vs GitHub
--------------	
	-> Git is version control system.
	-> GitHub is a site that provides hosting for our repositories and tools to work with them.	
	-> So, even BitBucket, GitBucket are also similar to GitHub.
	
	Download git from https://git-scm.com/.
	
	Once installed, to configure it in VS Code:
	--------------------------------------------
		--> Open View -> Terminal or Ctrl+` (back tick)
		--> you can select the Git bash here as the terminal. We can also have it set to default.
		--> To check the git version -> git --version or git -v.
		--> clear to clear the terminal (this is not a git command).
		--> To configure git globally
				--> git config --global user.name "Gowthaman Jeganathan"
				--> git config --global user.email "Gowthamnhub@gmail.com"
			To check the user name / email:
				--> git config user.name
				--> git config user.email
				
		To clone a repo from GitHub to local folder:
			-> git clone https://github.com/gowthamnhub/Advanced-CSharp.git (example).
			
		Created a repository in GitHub - "learn-git-github"	
		Cloned to GitHub folder in local system	
			git clone "https://github.com/gowthamnhub/learn-git-github.git"
		
		Added this file "Learn_Git_GitHub.txt" to the folder "learn-git-github"
		Now I can see there is one change showing in Source Control menu as untracked file.

		We can also view the status of the folder using below;	
			
		go to repo folder in VS Code terminal - 
		--> cd learn-git-github
		--> git status

To Push something from local to remote repo:
--------------------------------------------			
		What is known as untracked? what is happening here? 	
			Basically when we clone a repo to our local folder -> it will have two sections,
				--> git copy folder (which does exist in GitHub)
				--> another is git working copy (which we have not moved yet, or in progress one).
				
			So we need to move the working copy to git copy folder --> then push it to GitHub.
			To make the file status to untracked to tracked, we have to add the file to git.
				--> git add "Learn_Git_GitHub.txt"
				
			Once it is added, it is like its in the staging area, to make it move to the git copy folder, we need to commit.
				--> git commit -m "about git and git hub initial notes from Error Makes Clever Channel"
				
			So, now local git copy is updated with working copy changes.
			But GitHub repo is still not updated, for that we have to push the changes.
				--> git push origin main --> origin (GitHub Repo in this case "learn-git-github")
			
			So whole process would be => Insert/Modify document -> Add -> Commit -> Push
			
				==> Add(means moving changes to staging area)
				==> Commit (means committing to git copy folder)
				==> Push(means pushing changes to remote repo)
				
To Pull something from Remote:
------------------------------	
	git pull
	
How to create a repo from vs code and push it to remote?
---------------------------------------------------------
		-> Added a new folder to local folder "/d/GitHub/" as "NewRepo".
		-> cd NewRepo -> To go inside the NewRepo folder.
		-> Type git status - fatal: not a git repository (or any of the parent directories): .git
		-> because this folder is not a git folder yet.
		-> To make it git folder - 
				--> git init -> Initialized empty Git repository in D:/GitHub/NewRepo/.git/
				--> Now we can see .git folder inside NewRepo
		-> I added two files to the NewRepo -> index.html, style.css
		-> Now we need to add these two and push to remote.
		-> But how do we push multiple files to staging, we cannot keep adding invidual saying 
			git add index.htm, git add style.css	
			
		-> instead we can use "git add ."	--> moves all the changed files to staging.
		-> Then commit - git commit -m "created index.html, style.css files"
		-> To push "git push origin main" - Oooopsss! Error!!!!
				error: src refspec main does not match any
				error: failed to push some refs to 'origin'
				
		Because there is no remote repo yet to push these, so we need to create a NewRepo in remote and connect it to local.
			-> to connect the remote to local folder, in the GitHub itself there is a command given to be used when we create a 
			new repository.
				-> git remote add origin https://github.com/gowthamnhub/NewRepo.git
				-> Now try git origin push main
				-> again error - error: src refspec main does not match any
								 error:	failed to push some refs to 'https://github.com/gowthamnhub/NewRepo.git'
				Because there is no main branch in the NewRepo created. Check it with below command.
				We can see one thing when giving command "git branch" -> it says master.
			As in recent, github renamed their master branch as main.
			
How to modify the branch name?
-------------------------------			
			--> git branch -M main
			--> Now try "git push origin main" - it works.
		
How to view how many branches are there in the current repository we are working?
---------------------------------------------------------------------------------
		    --> git branch -a (lists all branches)	
			
To list down the branches in the repository?
---------------------------------------------
			--> git branch -a 

	o=> Created a newBranch1 in "NewRepo" repository in GitHub site.
	o=> In local, I am currently inside NewRepo - let me run "git branch -a".
	o=> But it does not show newBranch1 - after we do "git pull", we can see "newBranch1" visible.	

	If I have to switch to newBranch1 -> then I can do - "git checkout newBranch1"	(branch switched).
	
	Add a new file to newBranch1, added(staged) -> commit -> push (git push origin newBranch1)	
		 
		 --> "git push origin newBranch1"
	
	When I switch back to "main" branch -> then new file added does not show up, because that new file is added only to "newBranch1"

		So "main" branch will be mostly having completed code, if any in progress stories/defects code changes will be done by newly created sub branches and then via PR process, it will be reviewed and merged to "main" branch.
		
How to view the difference between main and newBranch1?
-------------------------------------------------------
		-> git checkout main
		-> git diff newBranch1 (shows the difference/modifide files)
		
How to merge one branch to another?
------------------------------------
		-> git merge newBranch1
		-> Then do push to send it to remote main - git push origin main
		

What is a Pull request?
-----------------------
		First of all pull request cannot be raised from command prompt as it is not a git feature/command, it is feature provided by
GitHub.
				For creating new branch from command: "git branch newBranch2"
				Once we add/modify something in the newBranch2 -> we can push it to remote  by usual -> add -> commit -> push commands.
					
						"git push origin newBranch2"
					
		Then by using Pull Request feature in GitHub to raise request for review and merge the code changes to the main branch.

What are conflicts?
--------------------
		When same file is being modified by two people in different branches, when trying to merge, Git would get confused which changes to be taken or overridden, hence it cause conflicts which can be resolved only manually.

		If suppose, I have two branches inside NewRepo as newBranch1, newBranch2.
		Changing the same file in these two branches then try to merge first branch, which will merge fine, and when trying to merge second branch, this Git gets confused as we are modifying the same line of code, it asks see the same line of code is someone already modified, so now confirm me which is the one I need to take, is it the changes from first branch or second branch?
		
		For example:
		------------
			I make a change in text file as "City: Bangalore" from newBranch1 -> Raise PR -> Merged to main
			But this change is not yet updated in newBranch2, here I make the change "City: Chennai" -> Raise PR -> but this time I get the message "This branch has conflicts that must be resolved" - when click on "Resolve Conflicts"
			It complains, newBranch2 -> "City:Chennai", but in main "City:Bangalore", please confirm which is correct and to be resolved.
			
							<<<<<<< newBranch2
							City: Chennai
							=======
							City: Bangalore
							>>>>>>> main
							
			We have to manually correct and resolve conflicts to be merged to main branch. 
			Then after merging PR, we can see the resolved change would get appeared in main branch.
			
					https://education.github.com/git-cheat-sheet-education.pdf		
